name: PHP CI & Docker Hub Publish

on:
  push:
    branches:
      - master # Or your primary branch, e.g., master
  pull_request:
    branches:
      - master # Or your primary branch

jobs:
  test:
    name: Run PHP Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.1', '8.2', '8.3'] # Test against multiple PHP versions
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP with extensions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, pdo_mysql, zip, bcmath, intl # Add extensions your app needs
          tools: composer # Installs composer

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest

      # Optional: If you have a .env file, create it from .env.example
      - name: Setup .env file for testing
        if: steps.check_files.outputs.exists == 'true' # Only run if .env.example exists
        run: |
          if [ -f .env.example ]; then
            cp .env.example .env
            echo "APP_KEY=$(php artisan key:generate --show)" >> .env # Example for Laravel
            # Add other environment-specific settings for testing if needed
          fi

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit # Or your specific test command

  build-and-push-docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test # Only run if the 'test' job succeeds
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Only on push to main
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        # For multi-platform builds if needed, otherwise optional

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }} # Use an Access Token, not your password

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKER_USERNAME }}/foodnow # Replace with your Docker Hub username and image name
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha # Add commit SHA as a tag

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Path to your Dockerfile and build context
          file: ./Dockerfile # Explicitly specify Dockerfile path
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha # Enable GitHub Actions cache for Docker layers
          cache-to: type=gha,mode=max # Write to GitHub Actions cache
