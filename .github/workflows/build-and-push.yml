name: Build and Push Docker Image

on:
  push:
    branches:
      - master # Kích hoạt workflow khi có push lên nhánh 'main'
  pull_request:
    branches:
      - master # Chạy workflow khi có pull request đến nhánh 'main'

env:
  # Thay thế 'lequochuy2004' bằng TÊN ĐĂNG NHẬP Docker Hub của bạn
  DOCKER_IMAGE_NAME: lequochuy2004/foodnow

jobs:
  test:
    name: Run PHP Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, xml, dom, pdo, pdo_mysql
          tools: composer

      # BƯỚC NÀY QUAN TRỌNG: Xóa cache cũ nếu có
      - name: Clear previous Composer cache (if any)
        run: rm -rf ${{ steps.composer-cache.outputs.cache-path }} # Sử dụng output từ bước cache nếu có
        continue-on-error: true # Tiếp tục nếu không có cache cũ

      # HOẶC XÓA THƯ MỤC CACHE MẶC ĐỊNH CỦA COMPOSER
      # - name: Clear Composer's default cache directory
      #   run: rm -rf $(composer config cache-dir)
      #   continue-on-error: true

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          # Sử dụng một key khác để đảm bảo cache mới được tạo
          key: ${{ runner.os }}-php-${{ env.PHP_VERSION }}-${{ hashFiles('**/composer.lock') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-php-${{ env.PHP_VERSION }}-${{ hashFiles('**/composer.lock') }}-

      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Install dependencies
        # Bỏ điều kiện if đi để luôn chạy install, đặc biệt khi đang debug
        run: composer install --prefer-dist --no-progress --no-suggest --verbose # Thêm --verbose

      # THÊM BƯỚC DEBUG NGAY SAU KHI CÀI ĐẶT
      - name: List PHPUnit directory contents (DEBUG)
        run: |
          echo "Listing vendor/phpunit/phpunit:"
          ls -la vendor/phpunit/phpunit/
          echo "Listing vendor/phpunit/phpunit/src (if exists):"
          ls -la vendor/phpunit/phpunit/src/ || echo "vendor/phpunit/phpunit/src/ does not exist"
        continue-on-error: true

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit
        # Hoặc nếu bạn có script trong composer.json:
        # run: composer test

      # Ví dụ: Chạy PHP Lint (kiểm tra cú pháp)
      - name: Run PHP Lint
        run: find . -name '*.php' -not -path "./vendor/*" -exec php -l {} \;
        # Hoặc nếu bạn có script trong composer.json:
        # run: composer lint

  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test # Job này chỉ chạy SAU KHI job 'test' hoàn thành thành công

    # Chỉ build và push image khi push lên nhánh master, không phải khi tạo PR
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE_NAME }}:latest
            ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
